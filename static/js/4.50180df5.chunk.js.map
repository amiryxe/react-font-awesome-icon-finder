{"version":3,"sources":["components/Icons/IconItem.js","components/Icons/IconList.js"],"names":["library","add","fas","IconItem","icon","size","title","extra","href","style","width","display","textAlign","fontSize","margin","IconList","filter","data","useContext","MainContext","iconList","item","match","useState","prev","next","count","setCount","hasMore","setHasMore","slice","current","setCurrent","dataLength","length","setTimeout","concat","prevState","loader","map","index","span","padding"],"mappings":"8NAQAA,IAAQC,IAAIC,KAEZ,IAeeC,EAfE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,cAAC,IAAD,CACEC,KAAK,QACLC,MAAOF,EACPG,MAAO,mBAAGC,KAAK,IAAR,kBACPC,MAAO,CAAEC,MAAO,OAAQC,QAAS,gBAJnC,SAME,oBAAIF,MAAO,CAAEG,UAAW,SAAUC,SAAU,OAAQC,OAAQ,GAA5D,SACE,cAAC,IAAD,CAAiBV,KAAMA,S,mCCkChBW,UA/CE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGZC,EAFeC,qBAAWC,KAAxBC,SAEcJ,QAAO,SAACK,GAAD,OAAUA,EAAKC,MAAMN,MAHnB,EAKLO,mBAAS,CACjCC,KAAM,EACNC,KAAM,KAPuB,mBAKxBC,EALwB,KAKjBC,EALiB,OAUDJ,oBAAS,GAVR,mBAUxBK,EAVwB,KAUfC,EAVe,OAYDN,mBAASN,EAAKa,MAAMJ,EAAMF,KAAME,EAAMD,OAZrC,mBAYxBM,EAZwB,KAYfC,EAZe,KA4B/B,OACE,cAAC,IAAD,CACEC,WAAYF,EAAQG,OACpBT,KAjBgB,WACdM,EAAQG,SAAWjB,EAAKiB,QAI5BC,YAAW,WACTH,EAAWD,EAAQK,OAAOnB,EAAKa,MAAMJ,EAAMF,KAAO,GAAIE,EAAMD,KAAO,QAClE,KACHE,GAAS,SAACU,GAAD,MAAgB,CACvBb,KAAMa,EAAUb,KAAO,GACvBC,KAAMY,EAAUZ,KAAO,QARvBI,GAAW,IAgBXD,QAASA,EACTU,OAAQ,4CAJV,SAME,cAAC,IAAD,UACGP,GACCA,EAAQQ,KAAI,SAAClB,EAAMmB,GAAP,OACV,cAAC,IAAD,CAAiBC,KAAM,EAAGhC,MAAO,CAAEiC,QAAS,QAA5C,SACE,cAAC,EAAD,CAAUtC,KAAMiB,KADRmB","file":"static/js/4.50180df5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(fas);\r\n\r\nconst IconItem = ({ icon }) => {\r\n  return (\r\n    <Card\r\n      size=\"small\"\r\n      title={icon}\r\n      extra={<a href=\"#\">copy</a>}\r\n      style={{ width: \"100%\", display: \"inline-block\" }}\r\n    >\r\n      <h2 style={{ textAlign: \"center\", fontSize: \"3rem\", margin: 0 }}>\r\n        <FontAwesomeIcon icon={icon} />\r\n      </h2>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default IconItem;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport IconItem from \"./IconItem\";\r\nimport { Row, Col } from \"antd\";\r\nimport MainContext from \"../../context/mainContext\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst IconList = ({ filter }) => {\r\n  const { iconList } = useContext(MainContext);\r\n\r\n  const data = iconList.filter((item) => item.match(filter));\r\n\r\n  const [count, setCount] = useState({\r\n    prev: 0,\r\n    next: 10,\r\n  });\r\n\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const [current, setCurrent] = useState(data.slice(count.prev, count.next));\r\n\r\n  const getMoreData = () => {\r\n    if (current.length === data.length) {\r\n      setHasMore(false);\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      setCurrent(current.concat(data.slice(count.prev + 10, count.next + 10)));\r\n    }, 1000);\r\n    setCount((prevState) => ({\r\n      prev: prevState.prev + 10,\r\n      next: prevState.next + 10,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={current.length}\r\n      next={getMoreData}\r\n      hasMore={hasMore}\r\n      loader={<h4>Loading...</h4>}\r\n    >\r\n      <Row>\r\n        {current &&\r\n          current.map((item, index) => (\r\n            <Col key={index} span={4} style={{ padding: \"1rem\" }}>\r\n              <IconItem icon={item} />\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n\r\nexport default IconList;\r\n"],"sourceRoot":""}